name: CI

on:
  push:
  release:
    types: published

jobs:

  1-dotnet-build:
    #runs-on: ubuntu-latest
    runs-on: ubuntu-16.04

    steps:
      - name: dump gihub env
        env:
          GHCTX: ${{ toJson(github) }}
        run: echo "$GHCTX"

      - name: checkout
        uses: actions/checkout@v1

      - name: extract tag info
        shell: pwsh
        run: |
          if ($env:GITHUB_REF -match '^refs/tags/v=(.+)') {
            $tagVersion = $Matches[1]
            if ($tagVersion -match '(.+)(-.+)') {
              $tagVersionPrefix = $Matches[1]
              $tagVersionSuffix = $Matches[2]
            }
            else {
              $tagVersionPrefix = $tagVersion
              $tagVersionSuffix = ''
            }
            ## Export as ENV VARS for subsequent steps
            Write-Host "Found matching Tag Version info:"
            Write-Host "::set-env name=TAG_VERSION::$tagVersion"
            Write-Host "::set-env name=TAG_VERSION_PREFIX::$tagVersionPrefix"
            Write-Host "::set-env name=TAG_VERSION_SUFFIX::$tagVersionSuffix"
          }

      - name: build number (pwsh)
        shell: pwsh
        run: |
          ./.github/workflows/build-num.ps1               `
            -InformationAction Continue                   `
            -GitHubToken "${{ secrets.BUILD_NUM_OAUTH }}" `
            -VersionKey "$($env:TAG_VERSION_PREFIX)"

          Write-Host "Computing Build Version Suffix as:  "
          $buildVersionSuffix = ".$($env:VERS_BUILD_NUM)$($env:TAG_VERSION_SUFFIX)"
          Write-Host "::set-env name=BUILD_VERSION_SUFFIX::$($buildVersionSuffix)"

      - name: build
        run:  dotnet build /p:VersionBuildNumber=$BUILD_VERSION_SUFFIX

      - name: package
        run:  dotnet pack /p:VersionBuildNumber=$BUILD_VERSION_SUFFIX
      
      - name: upload package as artifact
        if: startsWith(github.ref, 'refs/tags/v=')
        uses: actions/upload-artifact@v1
        with:
          name: package
          path: src/Bkkr.GitHub.TestActionsAndRegistry/bin/Debug


  2-push-github-nuget:
    needs: default-build
    if: (github.event_name == "push") && startsWith(github.ref, 'refs/tags/v=')

    #runs-on: ubuntu-latest
    runs-on: ubuntu-16.04

    steps:
      - name: dump gihub env
        env:
          GHCTX: ${{ toJson(github) }}
        run: echo "$GHCTX"

      - name: download package from artifact
        uses: actions/download-artifact@v1
        with:
          name: package

      - name: install nuget
        ## Win only:
        #uses: warrenbuckley/Setup-Nuget@v1
        uses: olegtarasov/download-nuget@v1

      - name: register nuget repo
        ## As per:
        ##  https://help.github.com/en/articles/configuring-nuget-for-use-with-github-package-registry
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #run:  nuget sources Add -Name "GPR" \
        run: |
          mono $NUGET_EXE sources Add -Name "GPR" \
            -Source "https://nuget.pkg.github.com/ebekker/index.json" \
            -UserName ebekker -Password $GITHUB_TOKEN
          find . -name *.nupkg
          mono $NUGET_EXE setapikey $GITHUB_TOKEN -Source "GPR"

      - name: publish
        run:  mono $NUGET_EXE push package/Bkkr.GitHub.TestActionsAndRegistry*.nupkg -Source GPR 
        #run:  dotnet nuget push Bkkr.GitHub.TestActionsAndRegistry.nupkg --source GPR 

  3-push-public-nuget:
    needs: default-build
    if: (github.event_name == "release") && startsWith(github.ref, 'refs/tags/v=')

    #runs-on: ubuntu-latest
    runs-on: ubuntu-16.04

    steps:
      - name: dump gihub env
        env:
          GHCTX: ${{ toJson(github) }}
        run: echo "$GHCTX"

      - name: download package from artifact
        uses: actions/download-artifact@v1
        with:
          name: package

      - name: PLACEHOLDER
        shell: pwsh
        run: |
          Write-Host "This is where I push to public NUGET.ORG"

      # - name: install nuget
      #   ## Win only:
      #   #uses: warrenbuckley/Setup-Nuget@v1
      #   uses: olegtarasov/download-nuget@v1

      # - name: register nuget repo
      #   ## As per:
      #   ##  https://help.github.com/en/articles/configuring-nuget-for-use-with-github-package-registry
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   #run:  nuget sources Add -Name "GPR" \
      #   run: |
      #     mono $NUGET_EXE sources Add -Name "GPR" \
      #       -Source "https://nuget.pkg.github.com/ebekker/index.json" \
      #       -UserName ebekker -Password $GITHUB_TOKEN
      #     find . -name *.nupkg
      #     mono $NUGET_EXE setapikey $GITHUB_TOKEN -Source "GPR"

      # - name: publish
      #   run:  mono $NUGET_EXE push package/Bkkr.GitHub.TestActionsAndRegistry*.nupkg -Source GPR 
      #   #run:  dotnet nuget push Bkkr.GitHub.TestActionsAndRegistry.nupkg --source GPR 
